---
# tasks file for doorduino

  - name: Set filesystem writable
    shell: warn=no /bin/mount -f -o remount,rw /
    always_run: yes
    tags:
      - readonly

  - name: Create 'pi' group
    group: gid=1000 name=pi state=present system=no
    tags:
      - user

  - name: Create 'pi' user
    user: comment='Doorduino User' group=pi createhome=yes name=pi password="{{passwordpi}}" state=present update_password=always shell=/bin/ash
    tags:
      - user
      - secrets
    ignore_errors: yes

  - name: Set authorized_keys for 'pi' user
    authorized_key: user=pi key={{item}} manage_dir=yes
    with_items:
      - "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDi4OKCh9iHFPUHJiG8asfZXTU544IGfhmTL5KZwmNX4BhXhtFi+BtI8eCCBWQOvWTMKbzMWJqn2m6z2ONAWce0eFCe4dnXDlOvkqXfX67/d1j+IeBAOJo0+55ZkwryzJdb9dY9GGwEFBPdJw9s2QX6NdhbQlwEFM/NsbGD9LNhJJ5Kl/3E7++fj09rqGptWNKEHAMpw9JTBx6JNbRs2bTWNEWXwa7o94KqheztHz+J57zc/UXVzbzcTXyqb3FLKE2ofZ0DsnOLkc9JRfNKKvQmYjupxCO53GzzhAeCp8Pk+YnlBrRAchwtG5YRwZv7X80Bl5r9VKoGhHeL3SK2+z8X root@gateway"
      - "{{rootpubkeys}}"
    tags:
      - pubkeys
      - secrets
    ignore_errors: yes

  - name: Place pubkeys for root account
    authorized_key: user=root key={{item}} manage_dir=yes
    with_items:
      - "{{rootpubkeys}}"
    tags:
      - pubkeys
      - secrets

  - name: Set hostname
    hostname: name={{inventory_hostname_short}}
    tags:
      - hostname

  - name: Set timezone
    file: src=/usr/share/zoneinfo/Europe/Amsterdam dest=/etc/localtime owner=root group=root state=link force=yes
    tags:
      - timezone
    ignore_errors: yes

  - name: Install required software (OpenWRT)
    when: "ansible_distribution == 'OpenWrt'"
    opkg: name={{item}} state=installed
    with_items:
      - ash
      - perl
      - screen
      - strace
      - sudo
      - perlbase-essential
      - perlbase-autoloader
      - perlbase-config
      - perlbase-digest
      - perlbase-dynaloader
      - perlbase-errno
      - perlbase-fcntl
      - perlbase-file
      - perlbase-integer
      - perlbase-io
      - perlbase-posix
      - perlbase-selectsaver
      - perlbase-socket
      - perlbase-symbol
      - perlbase-sys
      - perlbase-tie
      - perlbase-xsloader
      - coreutils-stty
      - curl
      - kmod-usb-core
      - kmod-usb2
      - kmod-usb-serial
      - kmod-usb-serial-ftdi
      - avrdude
    tags:
       - opkg
       - package

  - name: Install required software (Debian)
    when: "ansible_distribution == 'Debian'"
    apt: name={{item}} state=installed update_cache=yes cache_valid_time=3600
    with_items:
      - ash
      - perl
      - screen
      - strace
      - sudo
      - rsync
      - git
      - curl
      - perl
      - perl-modules
      - python
      - avrdude
      - rsyslog
      - rsync
    tags:
      - apt
      - package

  - name: Remove useless software (Debian)
    when: "ansible_distribution == 'Debian'"
    apt: name={{item}} state=absent
    with_items:
      - triggerhappy
      - manpages
      - manpages-dev
      - man-db
      - libx11
      - logrotate
      - dbus
      - xserver-common
      - bluez-firmware
      - geoip-database
      - libdns100
    tags:
      - apt
      - package


  - name: Install required software (raspi/fedora)
    when: "ansible_distribution == 'Fedora'"
    yum: name={{item}} state=installed
    with_items:
      - perl
      - sudo
      - curl
      - avrdude
      - FIXME
    tags:
       - yum
       - package

  - name: Stop and disable services
    service: name={{item}} state=stopped enabled=no
    with_items:
      - bluetooth
      - console-kit-daemon
      - console-kit-log-system-start
      - console-kit-log-system-stop
      - console-kit-log-system-restart
      - firewalld
      - iprdump
      - iprinit
      - iprupdate
      - NetworkManager
      - polkit
      - sendmail
      - sm-client
    ignore_errors: yes

  - name: Create udev rules
    copy: src=udev-99-doorduino.rules dest=/etc/udev/rules.d/99-doorduino.rules
    tags:
      - udev

  - name: Copy rsyslog configuration
    copy: src=rsyslog.conf dest=/etc/rsyslog.d/doorduino.conf owner=root group=root mode=0644
    tags:
      - rsyslog

  - name: Create directories for doorduino
    file: name={{item}} state=directory owner=pi group=pi
    with_items:
      - /home/pi/ibuttons.acl.d 
    tags:
      - directory

  - name: Download latest doorduino.pl
    copy: src={{item}} dest=/home/pi/{{item}} mode=0755 owner=pi group=pi
    with_items:
      - doorduino.pl
      - restartloop.sh
      - avrdude.conf
    tags:
      - copy
      - doorduino

  - name: Create ircname files
    template: src=ircname.j2 dest="/home/pi/ircname.doorduino_{{item.serial}}"
    with_items:
      - "{{doorduinos}}"
    tags:
      - doorduino

  - name: Create @reboot cronjob to start doorduino service (FIXME, Systemd unit files)
    cron: special_time=reboot user=pi job="screen -dmS {{item.name}} /home/pi/restartloop.sh /dev/doorduino_{{item.serial}}" name="doorduino_{{item.name}}"
    with_items:
      - "{{doorduinos}}"
    tags:
      - cron
      - service

  - name: Sysctl settings
    sysctl: name="{{item.name}}" value=="{{item.value}}" sysctl_file=/etc/sysctl.conf state=present sysctl_set=yes
    with_items:
      - { name: "kernel.panic", value: "10" }
    tags:
      - sysctl

  - name: Create cmdline.txt on pi (readonly mode)
    copy: content="{{boot_cmdline}}" dest=/boot/cmdline.txt owner=root group=root mode=755
    when: "'bcm2708.boardrev' in ansible_cmdline"
    tags:
      - pi
    ignore_errors: yes

  - name: Set filesystems in readonly
    mount: name={{item.name}} opts="{{item.opts}}" src="{{item.dev}}" state=mounted fstype="{{item.type}}" passno="{{item.pass}}"
    with_items:
      - { name: '/',        dev: '/dev/mmcblk0p2', type: 'ext4',  opts: 'defaults,ro,noatime', pass: '2' }
      - { name: '/boot',    dev: '/dev/mmcblk0p1', type: 'vfat',  opts: 'defaults,ro',         pass: '1' }
      - { name: '/tmp',     dev: 'tmpfs',          type: 'tmpfs', opts: 'defaults',            pass: '0' }
    ignore_errors: true
    tags:
      - fstab

  - name: Set filesystem readonly
    shell: /bin/mount -f -o remount,ro /
    always_run: yes
    tags:
      - readonly

# TODO:
# - logging via rsyslog / remote syslogging
# avrdude -c arduino -p m328p -P /dev/ttyUSB1 -b 57600 -U flash:w:doorduino2.ino.hex
